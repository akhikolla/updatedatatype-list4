// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// EntropyGauss_DeepState_TestHarness_generation.cpp and EntropyGauss_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double EntropyGauss(arma::mat S, int d);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  std::ofstream S_stream;
  arma::mat S  = RcppDeepState_mat();
  S_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/ppgmmga/inst/testfiles/EntropyGauss/inputs/S");
  S_stream << S;
  std::cout << "S values: "<< S << std::endl;
  S_stream.close();
  IntegerVector d(1);
  d[0]  = RcppDeepState_int();
  qs::c_qsave(d,"/home/akhila/fuzzer_packages/fuzzedpackages/ppgmmga/inst/testfiles/EntropyGauss/inputs/d.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "d values: "<< d << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    EntropyGauss(S,d[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
