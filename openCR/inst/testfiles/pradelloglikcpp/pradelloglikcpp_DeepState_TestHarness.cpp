// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// pradelloglikcpp_DeepState_TestHarness_generation.cpp and pradelloglikcpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector pradelloglikcpp(int type, const IntegerVector w, int nc, int jj, int nmix, const NumericMatrix openval, const IntegerVector PIAJ, const NumericVector intervals);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector type(1);
  type[0]  = RcppDeepState_int();
  qs::c_qsave(type,"/home/akhila/fuzzer_packages/fuzzedpackages/openCR/inst/testfiles/pradelloglikcpp/inputs/type.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "type values: "<< type << std::endl;
  IntegerVector w  = RcppDeepState_IntegerVector();
  qs::c_qsave(w,"/home/akhila/fuzzer_packages/fuzzedpackages/openCR/inst/testfiles/pradelloglikcpp/inputs/w.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "w values: "<< w << std::endl;
  IntegerVector nc(1);
  nc[0]  = RcppDeepState_int();
  qs::c_qsave(nc,"/home/akhila/fuzzer_packages/fuzzedpackages/openCR/inst/testfiles/pradelloglikcpp/inputs/nc.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nc values: "<< nc << std::endl;
  IntegerVector jj(1);
  jj[0]  = RcppDeepState_int();
  qs::c_qsave(jj,"/home/akhila/fuzzer_packages/fuzzedpackages/openCR/inst/testfiles/pradelloglikcpp/inputs/jj.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "jj values: "<< jj << std::endl;
  IntegerVector nmix(1);
  nmix[0]  = RcppDeepState_int();
  qs::c_qsave(nmix,"/home/akhila/fuzzer_packages/fuzzedpackages/openCR/inst/testfiles/pradelloglikcpp/inputs/nmix.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nmix values: "<< nmix << std::endl;
  NumericMatrix openval  = RcppDeepState_NumericMatrix();
  qs::c_qsave(openval,"/home/akhila/fuzzer_packages/fuzzedpackages/openCR/inst/testfiles/pradelloglikcpp/inputs/openval.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "openval values: "<< openval << std::endl;
  IntegerVector PIAJ  = RcppDeepState_IntegerVector();
  qs::c_qsave(PIAJ,"/home/akhila/fuzzer_packages/fuzzedpackages/openCR/inst/testfiles/pradelloglikcpp/inputs/PIAJ.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "PIAJ values: "<< PIAJ << std::endl;
  NumericVector intervals  = RcppDeepState_NumericVector();
  qs::c_qsave(intervals,"/home/akhila/fuzzer_packages/fuzzedpackages/openCR/inst/testfiles/pradelloglikcpp/inputs/intervals.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "intervals values: "<< intervals << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    pradelloglikcpp(type[0],w,nc[0],jj[0],nmix[0],openval,PIAJ,intervals);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
