// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// fit2way__DeepState_TestHarness_generation.cpp and fit2way__DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector fit2way_(const NumericVector& tab1, const NumericVector& tab2, const CharacterVector& R, const CharacterVector& vn);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector tab1  = RcppDeepState_NumericVector();
  std::string tab1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/gRim/inst/testfiles/fit2way_/libFuzzer_fit2way_/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_tab1.qs";
  qs::c_qsave(tab1,tab1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tab1 values: "<< tab1 << std::endl;
  NumericVector tab2  = RcppDeepState_NumericVector();
  std::string tab2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/gRim/inst/testfiles/fit2way_/libFuzzer_fit2way_/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_tab2.qs";
  qs::c_qsave(tab2,tab2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tab2 values: "<< tab2 << std::endl;
  CharacterVector R  = RcppDeepState_CharacterVector();
  std::string R_t = "/home/akhila/fuzzer_packages/fuzzedpackages/gRim/inst/testfiles/fit2way_/libFuzzer_fit2way_/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_R.qs";
  qs::c_qsave(R,R_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "R values: "<< R << std::endl;
  CharacterVector vn  = RcppDeepState_CharacterVector();
  std::string vn_t = "/home/akhila/fuzzer_packages/fuzzedpackages/gRim/inst/testfiles/fit2way_/libFuzzer_fit2way_/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_vn.qs";
  qs::c_qsave(vn,vn_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "vn values: "<< vn << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    fit2way_(tab1,tab2,R,vn);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
