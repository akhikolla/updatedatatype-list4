// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// kernel_partialF_DeepState_TestHarness_generation.cpp and kernel_partialF_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

arma::mat kernel_partialF(const arma::mat& Xc, const arma::mat& Q_res, const arma::mat& left_mat, int r);

TEST(,){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  std::ofstream Xc_stream;
  arma::mat Xc  = RcppDeepState_mat();
  Xc_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/WRI/inst/testfiles/kernel_partialF/inputs/Xc");
  Xc_stream << Xc;
  std::cout << "Xc values: "<< Xc << std::endl;
  Xc_stream.close();
  std::ofstream Q_res_stream;
  arma::mat Q_res  = RcppDeepState_mat();
  Q_res_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/WRI/inst/testfiles/kernel_partialF/inputs/Q_res");
  Q_res_stream << Q_res;
  std::cout << "Q_res values: "<< Q_res << std::endl;
  Q_res_stream.close();
  std::ofstream left_mat_stream;
  arma::mat left_mat  = RcppDeepState_mat();
  left_mat_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/WRI/inst/testfiles/kernel_partialF/inputs/left_mat");
  left_mat_stream << left_mat;
  std::cout << "left_mat values: "<< left_mat << std::endl;
  left_mat_stream.close();
  IntegerVector r(1);
  r[0]  = RcppDeepState_int();
  std::string r_t = "/home/akhila/fuzzer_packages/fuzzedpackages/WRI/inst/testfiles/kernel_partialF/AFL_kernel_partialF/afl_inputs/" + std::to_string(t) + "_r.qs";
  qs::c_qsave(r,r_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "r values: "<< r << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    kernel_partialF(Xc,Q_res,left_mat,r[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
