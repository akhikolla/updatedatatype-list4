// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// buffer_keep_DeepState_TestHarness_generation.cpp and buffer_keep_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

LogicalMatrix buffer_keep(const NumericMatrix& points, const NumericMatrix& lims, const double& R);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix points  = RcppDeepState_NumericMatrix();
  qs::c_qsave(points,"/home/akhila/fuzzer_packages/fuzzedpackages/palm/inst/testfiles/buffer_keep/inputs/points.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "points values: "<< points << std::endl;
  NumericMatrix lims  = RcppDeepState_NumericMatrix();
  qs::c_qsave(lims,"/home/akhila/fuzzer_packages/fuzzedpackages/palm/inst/testfiles/buffer_keep/inputs/lims.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lims values: "<< lims << std::endl;
  NumericVector R(1);
  R[0]  = RcppDeepState_double();
  qs::c_qsave(R,"/home/akhila/fuzzer_packages/fuzzedpackages/palm/inst/testfiles/buffer_keep/inputs/R.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "R values: "<< R << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    buffer_keep(points,lims,R[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
