// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// pvarC_DeepState_TestHarness_generation.cpp and pvarC_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List pvarC(const NumericVector& x, double& p, int LSI);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  qs::c_qsave(x,"/home/akhila/fuzzer_packages/fuzzedpackages/pvar/inst/testfiles/pvarC/inputs/x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  NumericVector p(1);
  p[0]  = RcppDeepState_double();
  qs::c_qsave(p,"/home/akhila/fuzzer_packages/fuzzedpackages/pvar/inst/testfiles/pvarC/inputs/p.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "p values: "<< p << std::endl;
  IntegerVector LSI(1);
  LSI[0]  = RcppDeepState_int();
  qs::c_qsave(LSI,"/home/akhila/fuzzer_packages/fuzzedpackages/pvar/inst/testfiles/pvarC/inputs/LSI.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "LSI values: "<< LSI << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    pvarC(x,p[0],LSI[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
