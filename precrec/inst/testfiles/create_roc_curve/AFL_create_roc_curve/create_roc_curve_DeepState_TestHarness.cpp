// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// create_roc_curve_DeepState_TestHarness_generation.cpp and create_roc_curve_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List create_roc_curve(const Rcpp::NumericVector& tps, const Rcpp::NumericVector& fps, const Rcpp::NumericVector& sp, const Rcpp::NumericVector& sn, double x_bins);

TEST(,){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector tps  = RcppDeepState_NumericVector();
  std::string tps_t = "/home/akhila/fuzzer_packages/fuzzedpackages/precrec/inst/testfiles/create_roc_curve/AFL_create_roc_curve/afl_inputs/" + std::to_string(t) + "_tps.qs";
  qs::c_qsave(tps,tps_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tps values: "<< tps << std::endl;
  NumericVector fps  = RcppDeepState_NumericVector();
  std::string fps_t = "/home/akhila/fuzzer_packages/fuzzedpackages/precrec/inst/testfiles/create_roc_curve/AFL_create_roc_curve/afl_inputs/" + std::to_string(t) + "_fps.qs";
  qs::c_qsave(fps,fps_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "fps values: "<< fps << std::endl;
  NumericVector sp  = RcppDeepState_NumericVector();
  std::string sp_t = "/home/akhila/fuzzer_packages/fuzzedpackages/precrec/inst/testfiles/create_roc_curve/AFL_create_roc_curve/afl_inputs/" + std::to_string(t) + "_sp.qs";
  qs::c_qsave(sp,sp_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sp values: "<< sp << std::endl;
  NumericVector sn  = RcppDeepState_NumericVector();
  std::string sn_t = "/home/akhila/fuzzer_packages/fuzzedpackages/precrec/inst/testfiles/create_roc_curve/AFL_create_roc_curve/afl_inputs/" + std::to_string(t) + "_sn.qs";
  qs::c_qsave(sn,sn_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sn values: "<< sn << std::endl;
  NumericVector x_bins(1);
  x_bins[0]  = RcppDeepState_double();
  std::string x_bins_t = "/home/akhila/fuzzer_packages/fuzzedpackages/precrec/inst/testfiles/create_roc_curve/AFL_create_roc_curve/afl_inputs/" + std::to_string(t) + "_x_bins.qs";
  qs::c_qsave(x_bins,x_bins_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x_bins values: "<< x_bins << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    create_roc_curve(tps,fps,sp,sn,x_bins[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
