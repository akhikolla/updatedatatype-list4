// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// generate_primes__DeepState_TestHarness_generation.cpp and generate_primes__DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

std::vector<int> generate_primes_(int min, int max);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector min(1);
  min[0]  = RcppDeepState_int();
  qs::c_qsave(min,"/home/akhila/fuzzer_packages/fuzzedpackages/primes/inst/testfiles/generate_primes_/inputs/min.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "min values: "<< min << std::endl;
  IntegerVector max(1);
  max[0]  = RcppDeepState_int();
  qs::c_qsave(max,"/home/akhila/fuzzer_packages/fuzzedpackages/primes/inst/testfiles/generate_primes_/inputs/max.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "max values: "<< max << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    generate_primes_(min[0],max[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
