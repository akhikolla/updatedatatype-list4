// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// unNormedMargLogLikeCpp_DeepState_TestHarness_generation.cpp and unNormedMargLogLikeCpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double unNormedMargLogLikeCpp(double phi, double shift, int z11, int z12, int z21, int z22, int m011, int m012, int m021, int m022, int y01, int y02, int N1, int N2, int N01, int N02);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector phi(1);
  phi[0]  = RcppDeepState_double();
  qs::c_qsave(phi,"/home/akhila/fuzzer_packages/fuzzedpackages/poisDoubleSamp/inst/testfiles/unNormedMargLogLikeCpp/inputs/phi.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "phi values: "<< phi << std::endl;
  NumericVector shift(1);
  shift[0]  = RcppDeepState_double();
  qs::c_qsave(shift,"/home/akhila/fuzzer_packages/fuzzedpackages/poisDoubleSamp/inst/testfiles/unNormedMargLogLikeCpp/inputs/shift.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "shift values: "<< shift << std::endl;
  IntegerVector z11(1);
  z11[0]  = RcppDeepState_int();
  qs::c_qsave(z11,"/home/akhila/fuzzer_packages/fuzzedpackages/poisDoubleSamp/inst/testfiles/unNormedMargLogLikeCpp/inputs/z11.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "z11 values: "<< z11 << std::endl;
  IntegerVector z12(1);
  z12[0]  = RcppDeepState_int();
  qs::c_qsave(z12,"/home/akhila/fuzzer_packages/fuzzedpackages/poisDoubleSamp/inst/testfiles/unNormedMargLogLikeCpp/inputs/z12.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "z12 values: "<< z12 << std::endl;
  IntegerVector z21(1);
  z21[0]  = RcppDeepState_int();
  qs::c_qsave(z21,"/home/akhila/fuzzer_packages/fuzzedpackages/poisDoubleSamp/inst/testfiles/unNormedMargLogLikeCpp/inputs/z21.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "z21 values: "<< z21 << std::endl;
  IntegerVector z22(1);
  z22[0]  = RcppDeepState_int();
  qs::c_qsave(z22,"/home/akhila/fuzzer_packages/fuzzedpackages/poisDoubleSamp/inst/testfiles/unNormedMargLogLikeCpp/inputs/z22.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "z22 values: "<< z22 << std::endl;
  IntegerVector m011(1);
  m011[0]  = RcppDeepState_int();
  qs::c_qsave(m011,"/home/akhila/fuzzer_packages/fuzzedpackages/poisDoubleSamp/inst/testfiles/unNormedMargLogLikeCpp/inputs/m011.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "m011 values: "<< m011 << std::endl;
  IntegerVector m012(1);
  m012[0]  = RcppDeepState_int();
  qs::c_qsave(m012,"/home/akhila/fuzzer_packages/fuzzedpackages/poisDoubleSamp/inst/testfiles/unNormedMargLogLikeCpp/inputs/m012.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "m012 values: "<< m012 << std::endl;
  IntegerVector m021(1);
  m021[0]  = RcppDeepState_int();
  qs::c_qsave(m021,"/home/akhila/fuzzer_packages/fuzzedpackages/poisDoubleSamp/inst/testfiles/unNormedMargLogLikeCpp/inputs/m021.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "m021 values: "<< m021 << std::endl;
  IntegerVector m022(1);
  m022[0]  = RcppDeepState_int();
  qs::c_qsave(m022,"/home/akhila/fuzzer_packages/fuzzedpackages/poisDoubleSamp/inst/testfiles/unNormedMargLogLikeCpp/inputs/m022.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "m022 values: "<< m022 << std::endl;
  IntegerVector y01(1);
  y01[0]  = RcppDeepState_int();
  qs::c_qsave(y01,"/home/akhila/fuzzer_packages/fuzzedpackages/poisDoubleSamp/inst/testfiles/unNormedMargLogLikeCpp/inputs/y01.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y01 values: "<< y01 << std::endl;
  IntegerVector y02(1);
  y02[0]  = RcppDeepState_int();
  qs::c_qsave(y02,"/home/akhila/fuzzer_packages/fuzzedpackages/poisDoubleSamp/inst/testfiles/unNormedMargLogLikeCpp/inputs/y02.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y02 values: "<< y02 << std::endl;
  IntegerVector N1(1);
  N1[0]  = RcppDeepState_int();
  qs::c_qsave(N1,"/home/akhila/fuzzer_packages/fuzzedpackages/poisDoubleSamp/inst/testfiles/unNormedMargLogLikeCpp/inputs/N1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "N1 values: "<< N1 << std::endl;
  IntegerVector N2(1);
  N2[0]  = RcppDeepState_int();
  qs::c_qsave(N2,"/home/akhila/fuzzer_packages/fuzzedpackages/poisDoubleSamp/inst/testfiles/unNormedMargLogLikeCpp/inputs/N2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "N2 values: "<< N2 << std::endl;
  IntegerVector N01(1);
  N01[0]  = RcppDeepState_int();
  qs::c_qsave(N01,"/home/akhila/fuzzer_packages/fuzzedpackages/poisDoubleSamp/inst/testfiles/unNormedMargLogLikeCpp/inputs/N01.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "N01 values: "<< N01 << std::endl;
  IntegerVector N02(1);
  N02[0]  = RcppDeepState_int();
  qs::c_qsave(N02,"/home/akhila/fuzzer_packages/fuzzedpackages/poisDoubleSamp/inst/testfiles/unNormedMargLogLikeCpp/inputs/N02.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "N02 values: "<< N02 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    unNormedMargLogLikeCpp(phi[0],shift[0],z11[0],z12[0],z21[0],z22[0],m011[0],m012[0],m021[0],m022[0],y01[0],y02[0],N1[0],N2[0],N01[0],N02[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
