// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// soundex_internal_DeepState_TestHarness_generation.cpp and soundex_internal_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::CharacterVector soundex_internal(Rcpp::CharacterVector word, int maxCodeLen);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  CharacterVector word  = RcppDeepState_CharacterVector();
  std::string word_t = "/home/akhila/fuzzer_packages/fuzzedpackages/phonics/inst/testfiles/soundex_internal/libFuzzer_soundex_internal/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_word.qs";
  qs::c_qsave(word,word_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "word values: "<< word << std::endl;
  IntegerVector maxCodeLen(1);
  maxCodeLen[0]  = RcppDeepState_int();
  std::string maxCodeLen_t = "/home/akhila/fuzzer_packages/fuzzedpackages/phonics/inst/testfiles/soundex_internal/libFuzzer_soundex_internal/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_maxCodeLen.qs";
  qs::c_qsave(maxCodeLen,maxCodeLen_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "maxCodeLen values: "<< maxCodeLen << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    soundex_internal(word,maxCodeLen[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
