// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cpp_rkwcwg_DeepState_TestHarness_generation.cpp and cpp_rkwcwg_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector cpp_rkwcwg(const int& n, const NumericVector& valpha, const NumericVector& vbeta, const NumericVector& vgamma, const NumericVector& va, const NumericVector& vb);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector n(1);
  n[0]  = RcppDeepState_int();
  qs::c_qsave(n,"/home/akhila/fuzzer_packages/fuzzedpackages/elfDistr/inst/testfiles/cpp_rkwcwg/inputs/n.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n values: "<< n << std::endl;
  NumericVector valpha  = RcppDeepState_NumericVector();
  qs::c_qsave(valpha,"/home/akhila/fuzzer_packages/fuzzedpackages/elfDistr/inst/testfiles/cpp_rkwcwg/inputs/valpha.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "valpha values: "<< valpha << std::endl;
  NumericVector vbeta  = RcppDeepState_NumericVector();
  qs::c_qsave(vbeta,"/home/akhila/fuzzer_packages/fuzzedpackages/elfDistr/inst/testfiles/cpp_rkwcwg/inputs/vbeta.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "vbeta values: "<< vbeta << std::endl;
  NumericVector vgamma  = RcppDeepState_NumericVector();
  qs::c_qsave(vgamma,"/home/akhila/fuzzer_packages/fuzzedpackages/elfDistr/inst/testfiles/cpp_rkwcwg/inputs/vgamma.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "vgamma values: "<< vgamma << std::endl;
  NumericVector va  = RcppDeepState_NumericVector();
  qs::c_qsave(va,"/home/akhila/fuzzer_packages/fuzzedpackages/elfDistr/inst/testfiles/cpp_rkwcwg/inputs/va.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "va values: "<< va << std::endl;
  NumericVector vb  = RcppDeepState_NumericVector();
  qs::c_qsave(vb,"/home/akhila/fuzzer_packages/fuzzedpackages/elfDistr/inst/testfiles/cpp_rkwcwg/inputs/vb.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "vb values: "<< vb << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cpp_rkwcwg(n[0],valpha,vbeta,vgamma,va,vb);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
