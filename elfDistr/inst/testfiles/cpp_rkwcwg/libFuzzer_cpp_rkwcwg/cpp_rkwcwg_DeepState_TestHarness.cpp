// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cpp_rkwcwg_DeepState_TestHarness_generation.cpp and cpp_rkwcwg_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector cpp_rkwcwg(const int& n, const NumericVector& valpha, const NumericVector& vbeta, const NumericVector& vgamma, const NumericVector& va, const NumericVector& vb);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector n(1);
  n[0]  = RcppDeepState_int();
  std::string n_t = "/home/akhila/fuzzer_packages/fuzzedpackages/elfDistr/inst/testfiles/cpp_rkwcwg/libFuzzer_cpp_rkwcwg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_n.qs";
  qs::c_qsave(n,n_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n values: "<< n << std::endl;
  NumericVector valpha  = RcppDeepState_NumericVector();
  std::string valpha_t = "/home/akhila/fuzzer_packages/fuzzedpackages/elfDistr/inst/testfiles/cpp_rkwcwg/libFuzzer_cpp_rkwcwg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_valpha.qs";
  std::string va_t = "/home/akhila/fuzzer_packages/fuzzedpackages/elfDistr/inst/testfiles/cpp_rkwcwg/libFuzzer_cpp_rkwcwg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_va.qs";
  qs::c_qsave(valpha,valpha_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "valpha values: "<< valpha << std::endl;
  NumericVector vbeta  = RcppDeepState_NumericVector();
  std::string vbeta_t = "/home/akhila/fuzzer_packages/fuzzedpackages/elfDistr/inst/testfiles/cpp_rkwcwg/libFuzzer_cpp_rkwcwg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_vbeta.qs";
  std::string vb_t = "/home/akhila/fuzzer_packages/fuzzedpackages/elfDistr/inst/testfiles/cpp_rkwcwg/libFuzzer_cpp_rkwcwg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_vb.qs";
  qs::c_qsave(vbeta,vbeta_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "vbeta values: "<< vbeta << std::endl;
  NumericVector vgamma  = RcppDeepState_NumericVector();
  std::string vgamma_t = "/home/akhila/fuzzer_packages/fuzzedpackages/elfDistr/inst/testfiles/cpp_rkwcwg/libFuzzer_cpp_rkwcwg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_vgamma.qs";
  qs::c_qsave(vgamma,vgamma_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "vgamma values: "<< vgamma << std::endl;
  NumericVector va  = RcppDeepState_NumericVector();
  std::string va_t = "/home/akhila/fuzzer_packages/fuzzedpackages/elfDistr/inst/testfiles/cpp_rkwcwg/libFuzzer_cpp_rkwcwg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_va.qs";
  qs::c_qsave(va,va_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "va values: "<< va << std::endl;
  NumericVector vb  = RcppDeepState_NumericVector();
  std::string vb_t = "/home/akhila/fuzzer_packages/fuzzedpackages/elfDistr/inst/testfiles/cpp_rkwcwg/libFuzzer_cpp_rkwcwg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_vb.qs";
  qs::c_qsave(vb,vb_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "vb values: "<< vb << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cpp_rkwcwg(n[0],valpha,vbeta,vgamma,va,vb);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
