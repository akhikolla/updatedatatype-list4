// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// INDEXG_DeepState_TestHarness_generation.cpp and INDEXG_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

int INDEXG(IntegerVector ag1, int na1, int m2);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector ag1  = RcppDeepState_IntegerVector();
  std::string ag1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/polysat/inst/testfiles/INDEXG/libFuzzer_INDEXG/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_ag1.qs";
  qs::c_qsave(ag1,ag1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ag1 values: "<< ag1 << std::endl;
  IntegerVector na1(1);
  na1[0]  = RcppDeepState_int();
  std::string na1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/polysat/inst/testfiles/INDEXG/libFuzzer_INDEXG/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_na1.qs";
  qs::c_qsave(na1,na1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "na1 values: "<< na1 << std::endl;
  IntegerVector m2(1);
  m2[0]  = RcppDeepState_int();
  std::string m2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/polysat/inst/testfiles/INDEXG/libFuzzer_INDEXG/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_m2.qs";
  qs::c_qsave(m2,m2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "m2 values: "<< m2 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    INDEXG(ag1,na1[0],m2[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
