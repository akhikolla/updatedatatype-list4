// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// HoTwoParents_DeepState_TestHarness_generation.cpp and HoTwoParents_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector HoTwoParents(IntegerVector genotypes1, IntegerVector genotypes2, IntegerVector alleles2loc, IntegerVector keeploc, double ploidy);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector genotypes1  = RcppDeepState_IntegerVector();
  std::string genotypes1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/polyRAD/inst/testfiles/HoTwoParents/libFuzzer_HoTwoParents/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_genotypes1.qs";
  qs::c_qsave(genotypes1,genotypes1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "genotypes1 values: "<< genotypes1 << std::endl;
  IntegerVector genotypes2  = RcppDeepState_IntegerVector();
  std::string genotypes2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/polyRAD/inst/testfiles/HoTwoParents/libFuzzer_HoTwoParents/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_genotypes2.qs";
  qs::c_qsave(genotypes2,genotypes2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "genotypes2 values: "<< genotypes2 << std::endl;
  IntegerVector alleles2loc  = RcppDeepState_IntegerVector();
  std::string alleles2loc_t = "/home/akhila/fuzzer_packages/fuzzedpackages/polyRAD/inst/testfiles/HoTwoParents/libFuzzer_HoTwoParents/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_alleles2loc.qs";
  qs::c_qsave(alleles2loc,alleles2loc_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alleles2loc values: "<< alleles2loc << std::endl;
  IntegerVector keeploc  = RcppDeepState_IntegerVector();
  std::string keeploc_t = "/home/akhila/fuzzer_packages/fuzzedpackages/polyRAD/inst/testfiles/HoTwoParents/libFuzzer_HoTwoParents/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_keeploc.qs";
  qs::c_qsave(keeploc,keeploc_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "keeploc values: "<< keeploc << std::endl;
  NumericVector ploidy(1);
  ploidy[0]  = RcppDeepState_double();
  std::string ploidy_t = "/home/akhila/fuzzer_packages/fuzzedpackages/polyRAD/inst/testfiles/HoTwoParents/libFuzzer_HoTwoParents/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_ploidy.qs";
  qs::c_qsave(ploidy,ploidy_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ploidy values: "<< ploidy << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    HoTwoParents(genotypes1,genotypes2,alleles2loc,keeploc,ploidy[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
