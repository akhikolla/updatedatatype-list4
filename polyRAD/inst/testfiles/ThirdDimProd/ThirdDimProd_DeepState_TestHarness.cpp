// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// ThirdDimProd_DeepState_TestHarness_generation.cpp and ThirdDimProd_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix ThirdDimProd(NumericVector probs, int ngen, int ntaxa);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector probs  = RcppDeepState_NumericVector();
  qs::c_qsave(probs,"/home/akhila/fuzzer_packages/fuzzedpackages/polyRAD/inst/testfiles/ThirdDimProd/inputs/probs.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "probs values: "<< probs << std::endl;
  IntegerVector ngen(1);
  ngen[0]  = RcppDeepState_int();
  qs::c_qsave(ngen,"/home/akhila/fuzzer_packages/fuzzedpackages/polyRAD/inst/testfiles/ThirdDimProd/inputs/ngen.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ngen values: "<< ngen << std::endl;
  IntegerVector ntaxa(1);
  ntaxa[0]  = RcppDeepState_int();
  qs::c_qsave(ntaxa,"/home/akhila/fuzzer_packages/fuzzedpackages/polyRAD/inst/testfiles/ThirdDimProd/inputs/ntaxa.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ntaxa values: "<< ntaxa << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    ThirdDimProd(probs,ngen[0],ntaxa[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
