// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// logLikMultiNorm_DeepState_TestHarness_generation.cpp and logLikMultiNorm_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

arma::colvec logLikMultiNorm(const arma::mat& mCoef, const arma::mat& mDist, double s2, double phi, double p);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  std::ofstream mCoef_stream;
  arma::mat mCoef  = RcppDeepState_mat();
  mCoef_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/geoFKF/inst/testfiles/logLikMultiNorm/inputs/mCoef");
  mCoef_stream << mCoef;
  std::cout << "mCoef values: "<< mCoef << std::endl;
  mCoef_stream.close();
  std::ofstream mDist_stream;
  arma::mat mDist  = RcppDeepState_mat();
  mDist_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/geoFKF/inst/testfiles/logLikMultiNorm/inputs/mDist");
  mDist_stream << mDist;
  std::cout << "mDist values: "<< mDist << std::endl;
  mDist_stream.close();
  NumericVector s2(1);
  s2[0]  = RcppDeepState_double();
  qs::c_qsave(s2,"/home/akhila/fuzzer_packages/fuzzedpackages/geoFKF/inst/testfiles/logLikMultiNorm/inputs/s2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "s2 values: "<< s2 << std::endl;
  NumericVector phi(1);
  phi[0]  = RcppDeepState_double();
  qs::c_qsave(phi,"/home/akhila/fuzzer_packages/fuzzedpackages/geoFKF/inst/testfiles/logLikMultiNorm/inputs/phi.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "phi values: "<< phi << std::endl;
  NumericVector p(1);
  p[0]  = RcppDeepState_double();
  qs::c_qsave(p,"/home/akhila/fuzzer_packages/fuzzedpackages/geoFKF/inst/testfiles/logLikMultiNorm/inputs/p.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "p values: "<< p << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    logLikMultiNorm(mCoef,mDist,s2[0],phi[0],p[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
