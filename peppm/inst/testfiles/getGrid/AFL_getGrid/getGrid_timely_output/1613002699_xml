<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: /usr/lib/R/bin/exec/R --vanilla</line>
</preamble>

<pid>3029926</pid>
<ppid>3029925</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=full</arg>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/fuzzer_packages/fuzzedpackages/peppm/inst/testfiles/getGrid/AFL_getGrid/getGrid_timely_output/1613002699_xml</arg>
  </vargv>
  <argv>
    <exe>/usr/lib/R/bin/exec/R</exe>
    <arg>--vanilla</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.040 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0xD16518E</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/peppm/libs/peppm.so</obj>
      <fn>getGrid(Rcpp::Vector&lt;13, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/peppm/src</dir>
      <file>library.cpp</file>
      <line>81</line>
    </frame>
    <frame>
      <ip>0xD15E961</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/peppm/libs/peppm.so</obj>
      <fn>_peppm_getGrid</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/peppm/src</dir>
      <file>RcppExports.cpp</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x493FB6B</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4981669</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4994DD7</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_eval</fn>
    </frame>
    <frame>
      <ip>0x4996C9E</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4997B91</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_applyClosure</fn>
    </frame>
    <frame>
      <ip>0x4994FFE</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_eval</fn>
    </frame>
    <frame>
      <ip>0x490B55C</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x497A1D0</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4994DD7</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_eval</fn>
    </frame>
    <frame>
      <ip>0x4996C9E</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
  </stack>
  <auxwhat>Address 0x9a36e08 is 0 bytes after a block of size 7,960 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x483B7F3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x49D42B3</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x49D466A</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_allocSExp</fn>
    </frame>
    <frame>
      <ip>0x4A35E10</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4A36DAA</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4A37941</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4A364BA</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4A35EE4</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4A37D31</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>R_Unserialize</fn>
    </frame>
    <frame>
      <ip>0x4A391BC</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4A395DA</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
    </frame>
    <frame>
      <ip>0x4995455</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_eval</fn>
    </frame>
  </stack>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:00:13.233 </time>
</status>

<errorcounts>
  <pair>
    <count>6</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

