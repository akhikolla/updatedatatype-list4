// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cal_var_f_DeepState_TestHarness_generation.cpp and cal_var_f_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

int cal_var_f(NumericVector& cov_f, const NumericVector& non_zero_f, const NumericMatrix& degree, const NumericVector& theta, const NumericVector& f, const NumericVector& z_j, const NumericVector& normalized_const, const NumericVector& m_t, const double shape);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector cov_f  = RcppDeepState_NumericVector();
  qs::c_qsave(cov_f,"/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/cal_var_f/inputs/cov_f.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "cov_f values: "<< cov_f << std::endl;
  NumericVector non_zero_f  = RcppDeepState_NumericVector();
  qs::c_qsave(non_zero_f,"/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/cal_var_f/inputs/non_zero_f.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "non_zero_f values: "<< non_zero_f << std::endl;
  NumericMatrix degree  = RcppDeepState_NumericMatrix();
  qs::c_qsave(degree,"/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/cal_var_f/inputs/degree.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "degree values: "<< degree << std::endl;
  NumericVector theta  = RcppDeepState_NumericVector();
  qs::c_qsave(theta,"/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/cal_var_f/inputs/theta.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "theta values: "<< theta << std::endl;
  NumericVector f  = RcppDeepState_NumericVector();
  qs::c_qsave(f,"/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/cal_var_f/inputs/f.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "f values: "<< f << std::endl;
  NumericVector z_j  = RcppDeepState_NumericVector();
  qs::c_qsave(z_j,"/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/cal_var_f/inputs/z_j.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "z_j values: "<< z_j << std::endl;
  NumericVector normalized_  = RcppDeepState_NumericVector();
  qs::c_qsave(normalized_const,"/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/cal_var_f/inputs/normalized_const.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "normalized_const values: "<< normalized_const << std::endl;
  NumericVector m_t  = RcppDeepState_NumericVector();
  qs::c_qsave(m_t,"/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/cal_var_f/inputs/m_t.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "m_t values: "<< m_t << std::endl;
  NumericVector shape(1);
  shape[0]  = RcppDeepState_double();
  qs::c_qsave(shape,"/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/cal_var_f/inputs/shape.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "shape values: "<< shape << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cal_var_f(cov_f,non_zero_f,degree,theta,f,z_j,normalized_const,m_t,shape[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
