<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./update_alpha_fast_DeepState_TestHarness --input_test_file /home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/update_alpha_fast/update_alpha_fast_output/cfdcae6f9463320a4dfbd941a904ccf8bc55ab44.pass</line>
</preamble>

<pid>2355013</pid>
<ppid>2355012</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/update_alpha_fast/update_alpha_fast_output/log_cfdcae6f9463320a4dfbd941a904ccf8bc55ab44/valgrind_log</arg>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=yes</arg>
  </vargv>
  <argv>
    <exe>./update_alpha_fast_DeepState_TestHarness</exe>
    <arg>--input_test_file</arg>
    <arg>/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/update_alpha_fast/update_alpha_fast_output/cfdcae6f9463320a4dfbd941a904ccf8bc55ab44.pass</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.042 </time>
</status>


<status>
  <state>FINISHED</state>
  <time>00:00:00:09.364 </time>
</status>

<error>
  <unique>0xe3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>3,520 bytes in 11 blocks are possibly lost in loss record 228 of 1,327</text>
    <leakedbytes>3520</leakedbytes>
    <leakedblocks>11</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483DD99</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x40149CA</ip>
      <obj>/usr/lib/x86_64-linux-gnu/ld-2.31.so</obj>
      <fn>allocate_dtv</fn>
      <dir>/build/glibc-ZN95T4/glibc-2.31/elf/../elf</dir>
      <file>dl-tls.c</file>
      <line>286</line>
    </frame>
    <frame>
      <ip>0x40149CA</ip>
      <obj>/usr/lib/x86_64-linux-gnu/ld-2.31.so</obj>
      <fn>_dl_allocate_tls</fn>
      <dir>/build/glibc-ZN95T4/glibc-2.31/elf/../elf</dir>
      <file>dl-tls.c</file>
      <line>532</line>
    </frame>
    <frame>
      <ip>0x5965322</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libpthread-2.31.so</obj>
      <fn>allocate_stack</fn>
      <dir>/build/glibc-ZN95T4/glibc-2.31/nptl</dir>
      <file>allocatestack.c</file>
      <line>622</line>
    </frame>
    <frame>
      <ip>0x5965322</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libpthread-2.31.so</obj>
      <fn>pthread_create@@GLIBC_2.2.5</fn>
      <dir>/build/glibc-ZN95T4/glibc-2.31/nptl</dir>
      <file>pthread_create.c</file>
      <line>660</line>
    </frame>
    <frame>
      <ip>0x5933DDA</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0</obj>
    </frame>
    <frame>
      <ip>0x592B8E0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0</obj>
      <fn>GOMP_parallel</fn>
    </frame>
    <frame>
      <ip>0x4D288B3</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/src/PAFit.so</obj>
      <fn>update_alpha_fast(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; const&amp;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; const&amp;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; const&amp;, double const&amp;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; const&amp;, Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt; const&amp;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; const&amp;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt; const&amp;, Rcpp::Matrix&lt;14, Rcpp::PreserveStorage&gt; const&amp;, double const&amp;, double)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/src</dir>
      <file>Cpp_code.cpp</file>
      <line>702</line>
    </frame>
    <frame>
      <ip>0x40AF70</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/update_alpha_fast/update_alpha_fast_DeepState_TestHarness</obj>
      <fn>DeepState_Test__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/update_alpha_fast</dir>
      <file>update_alpha_fast_DeepState_TestHarness.cpp</file>
      <line>65</line>
    </frame>
    <frame>
      <ip>0x409BA8</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/update_alpha_fast/update_alpha_fast_DeepState_TestHarness</obj>
      <fn>DeepState_Run__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/update_alpha_fast</dir>
      <file>update_alpha_fast_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41EC78</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/update_alpha_fast/update_alpha_fast_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41EF19</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/update_alpha_fast/update_alpha_fast_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41EFF4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/update_alpha_fast/update_alpha_fast_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x4076B5</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/update_alpha_fast/update_alpha_fast_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>


<status>
  <state>FINISHED</state>
  <time>00:00:00:10.049 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

