// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// normalized_constant_alpha_DeepState_TestHarness_generation.cpp and normalized_constant_alpha_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

int normalized_constant_alpha(NumericVector& norm, const double& alpha, const double& PA_offset, const NumericMatrix& degree, const NumericVector& theta, const NumericVector& f, const NumericMatrix& offset_tk, const double& offset);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector norm  = RcppDeepState_NumericVector();
  qs::c_qsave(norm,"/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/normalized_constant_alpha/inputs/norm.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "norm values: "<< norm << std::endl;
  NumericVector alpha(1);
  alpha[0]  = RcppDeepState_double();
  qs::c_qsave(alpha,"/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/normalized_constant_alpha/inputs/alpha.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alpha values: "<< alpha << std::endl;
  NumericVector PA_offset(1);
  PA_offset[0]  = RcppDeepState_double();
  qs::c_qsave(PA_offset,"/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/normalized_constant_alpha/inputs/PA_offset.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "PA_offset values: "<< PA_offset << std::endl;
  NumericMatrix degree  = RcppDeepState_NumericMatrix();
  qs::c_qsave(degree,"/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/normalized_constant_alpha/inputs/degree.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "degree values: "<< degree << std::endl;
  NumericVector theta  = RcppDeepState_NumericVector();
  qs::c_qsave(theta,"/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/normalized_constant_alpha/inputs/theta.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "theta values: "<< theta << std::endl;
  NumericVector f  = RcppDeepState_NumericVector();
  qs::c_qsave(f,"/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/normalized_constant_alpha/inputs/f.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "f values: "<< f << std::endl;
  NumericMatrix offset_tk  = RcppDeepState_NumericMatrix();
  qs::c_qsave(offset_tk,"/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/normalized_constant_alpha/inputs/offset_tk.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "offset_tk values: "<< offset_tk << std::endl;
  NumericVector offset(1);
  offset[0]  = RcppDeepState_double();
  qs::c_qsave(offset,"/home/akhila/fuzzer_packages/fuzzedpackages/PAFit/inst/testfiles/normalized_constant_alpha/inputs/offset.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "offset values: "<< offset << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    normalized_constant_alpha(norm,alpha[0],PA_offset[0],degree,theta,f,offset_tk,offset[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
