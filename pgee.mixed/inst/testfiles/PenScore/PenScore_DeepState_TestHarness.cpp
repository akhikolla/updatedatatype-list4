// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// PenScore_DeepState_TestHarness_generation.cpp and PenScore_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

arma::vec PenScore(Rcpp::NumericVector beta, Rcpp::NumericVector score, Rcpp::NumericMatrix Emat, int n);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector beta  = RcppDeepState_NumericVector();
  qs::c_qsave(beta,"/home/akhila/fuzzer_packages/fuzzedpackages/pgee.mixed/inst/testfiles/PenScore/inputs/beta.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "beta values: "<< beta << std::endl;
  NumericVector score  = RcppDeepState_NumericVector();
  qs::c_qsave(score,"/home/akhila/fuzzer_packages/fuzzedpackages/pgee.mixed/inst/testfiles/PenScore/inputs/score.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "score values: "<< score << std::endl;
  NumericMatrix Emat  = RcppDeepState_NumericMatrix();
  qs::c_qsave(Emat,"/home/akhila/fuzzer_packages/fuzzedpackages/pgee.mixed/inst/testfiles/PenScore/inputs/Emat.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Emat values: "<< Emat << std::endl;
  IntegerVector n(1);
  n[0]  = RcppDeepState_int();
  qs::c_qsave(n,"/home/akhila/fuzzer_packages/fuzzedpackages/pgee.mixed/inst/testfiles/PenScore/inputs/n.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n values: "<< n << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    PenScore(beta,score,Emat,n[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
