// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// lower_bound___DeepState_TestHarness_generation.cpp and lower_bound___DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector lower_bound__(const NumericVector xq, const NumericVector xvec);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector xq  = RcppDeepState_NumericVector();
  std::string xq_t = "/home/akhila/fuzzer_packages/fuzzedpackages/protViz/inst/testfiles/lower_bound__/libFuzzer_lower_bound__/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_xq.qs";
  qs::c_qsave(xq,xq_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xq values: "<< xq << std::endl;
  NumericVector xvec  = RcppDeepState_NumericVector();
  std::string xvec_t = "/home/akhila/fuzzer_packages/fuzzedpackages/protViz/inst/testfiles/lower_bound__/libFuzzer_lower_bound__/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_xvec.qs";
  qs::c_qsave(xvec,xvec_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xvec values: "<< xvec << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    lower_bound__(xq,xvec);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
