// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// null_mle_lreg_DeepState_TestHarness_generation.cpp and null_mle_lreg_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericVector null_mle_lreg(arma::mat& XX, int n, int p, int cons, double a, double b, double sprob, int niters);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  std::ofstream XX_stream;
  arma::mat XX  = RcppDeepState_mat();
  XX_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/BVSNLP/inst/testfiles/null_mle_lreg/inputs/XX");
  XX_stream << XX;
  std::cout << "XX values: "<< XX << std::endl;
  XX_stream.close();
  IntegerVector n(1);
  n[0]  = RcppDeepState_int();
  qs::c_qsave(n,"/home/akhila/fuzzer_packages/fuzzedpackages/BVSNLP/inst/testfiles/null_mle_lreg/inputs/n.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n values: "<< n << std::endl;
  IntegerVector p(1);
  p[0]  = RcppDeepState_int();
  qs::c_qsave(p,"/home/akhila/fuzzer_packages/fuzzedpackages/BVSNLP/inst/testfiles/null_mle_lreg/inputs/p.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "p values: "<< p << std::endl;
  IntegerVector cons(1);
  cons[0]  = RcppDeepState_int();
  qs::c_qsave(cons,"/home/akhila/fuzzer_packages/fuzzedpackages/BVSNLP/inst/testfiles/null_mle_lreg/inputs/cons.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "cons values: "<< cons << std::endl;
  NumericVector a(1);
  a[0]  = RcppDeepState_double();
  qs::c_qsave(a,"/home/akhila/fuzzer_packages/fuzzedpackages/BVSNLP/inst/testfiles/null_mle_lreg/inputs/a.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "a values: "<< a << std::endl;
  NumericVector b(1);
  b[0]  = RcppDeepState_double();
  qs::c_qsave(b,"/home/akhila/fuzzer_packages/fuzzedpackages/BVSNLP/inst/testfiles/null_mle_lreg/inputs/b.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "b values: "<< b << std::endl;
  NumericVector sprob(1);
  sprob[0]  = RcppDeepState_double();
  qs::c_qsave(sprob,"/home/akhila/fuzzer_packages/fuzzedpackages/BVSNLP/inst/testfiles/null_mle_lreg/inputs/sprob.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sprob values: "<< sprob << std::endl;
  IntegerVector niters(1);
  niters[0]  = RcppDeepState_int();
  qs::c_qsave(niters,"/home/akhila/fuzzer_packages/fuzzedpackages/BVSNLP/inst/testfiles/null_mle_lreg/inputs/niters.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "niters values: "<< niters << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    null_mle_lreg(XX,n[0],p[0],cons[0],a[0],b[0],sprob[0],niters[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
