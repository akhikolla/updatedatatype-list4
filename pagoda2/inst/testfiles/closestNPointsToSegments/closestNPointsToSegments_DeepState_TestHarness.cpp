// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// closestNPointsToSegments_DeepState_TestHarness_generation.cpp and closestNPointsToSegments_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List closestNPointsToSegments(NumericVector s, NumericVector e, NumericVector p, IntegerVector tss, int N);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector s  = RcppDeepState_NumericVector();
  qs::c_qsave(s,"/home/akhila/fuzzer_packages/fuzzedpackages/pagoda2/inst/testfiles/closestNPointsToSegments/inputs/s.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "s values: "<< s << std::endl;
  NumericVector e  = RcppDeepState_NumericVector();
  qs::c_qsave(e,"/home/akhila/fuzzer_packages/fuzzedpackages/pagoda2/inst/testfiles/closestNPointsToSegments/inputs/e.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "e values: "<< e << std::endl;
  NumericVector p  = RcppDeepState_NumericVector();
  qs::c_qsave(p,"/home/akhila/fuzzer_packages/fuzzedpackages/pagoda2/inst/testfiles/closestNPointsToSegments/inputs/p.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "p values: "<< p << std::endl;
  IntegerVector tss  = RcppDeepState_IntegerVector();
  qs::c_qsave(tss,"/home/akhila/fuzzer_packages/fuzzedpackages/pagoda2/inst/testfiles/closestNPointsToSegments/inputs/tss.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tss values: "<< tss << std::endl;
  IntegerVector N(1);
  N[0]  = RcppDeepState_int();
  qs::c_qsave(N,"/home/akhila/fuzzer_packages/fuzzedpackages/pagoda2/inst/testfiles/closestNPointsToSegments/inputs/N.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "N values: "<< N << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    closestNPointsToSegments(s,e,p,tss,N[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
