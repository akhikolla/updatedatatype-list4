// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// residual_mu_DeepState_TestHarness_generation.cpp and residual_mu_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double residual_mu(NumericMatrix mu1, NumericMatrix mu, int ndim, int numbers);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix mu1  = RcppDeepState_NumericMatrix();
  qs::c_qsave(mu1,"/home/akhila/fuzzer_packages/fuzzedpackages/prclust/inst/testfiles/residual_mu/inputs/mu1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mu1 values: "<< mu1 << std::endl;
  NumericMatrix mu  = RcppDeepState_NumericMatrix();
  qs::c_qsave(mu,"/home/akhila/fuzzer_packages/fuzzedpackages/prclust/inst/testfiles/residual_mu/inputs/mu.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mu values: "<< mu << std::endl;
  IntegerVector ndim(1);
  ndim[0]  = RcppDeepState_int();
  qs::c_qsave(ndim,"/home/akhila/fuzzer_packages/fuzzedpackages/prclust/inst/testfiles/residual_mu/inputs/ndim.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ndim values: "<< ndim << std::endl;
  IntegerVector numbers(1);
  numbers[0]  = RcppDeepState_int();
  qs::c_qsave(numbers,"/home/akhila/fuzzer_packages/fuzzedpackages/prclust/inst/testfiles/residual_mu/inputs/numbers.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "numbers values: "<< numbers << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    residual_mu(mu1,mu,ndim[0],numbers[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
