// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cal_S_DeepState_TestHarness_generation.cpp and cal_S_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double cal_S(NumericMatrix data, NumericMatrix mu, NumericMatrix theta, double lambda1, double lambda2, double tau, int ndim, int numbers, int methods);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix data  = RcppDeepState_NumericMatrix();
  qs::c_qsave(data,"/home/akhila/fuzzer_packages/fuzzedpackages/prclust/inst/testfiles/cal_S/inputs/data.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "data values: "<< data << std::endl;
  NumericMatrix mu  = RcppDeepState_NumericMatrix();
  qs::c_qsave(mu,"/home/akhila/fuzzer_packages/fuzzedpackages/prclust/inst/testfiles/cal_S/inputs/mu.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mu values: "<< mu << std::endl;
  NumericMatrix theta  = RcppDeepState_NumericMatrix();
  qs::c_qsave(theta,"/home/akhila/fuzzer_packages/fuzzedpackages/prclust/inst/testfiles/cal_S/inputs/theta.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "theta values: "<< theta << std::endl;
  NumericVector lambda1(1);
  lambda1[0]  = RcppDeepState_double();
  qs::c_qsave(lambda1,"/home/akhila/fuzzer_packages/fuzzedpackages/prclust/inst/testfiles/cal_S/inputs/lambda1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambda1 values: "<< lambda1 << std::endl;
  NumericVector lambda2(1);
  lambda2[0]  = RcppDeepState_double();
  qs::c_qsave(lambda2,"/home/akhila/fuzzer_packages/fuzzedpackages/prclust/inst/testfiles/cal_S/inputs/lambda2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambda2 values: "<< lambda2 << std::endl;
  NumericVector tau(1);
  tau[0]  = RcppDeepState_double();
  qs::c_qsave(tau,"/home/akhila/fuzzer_packages/fuzzedpackages/prclust/inst/testfiles/cal_S/inputs/tau.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tau values: "<< tau << std::endl;
  IntegerVector ndim(1);
  ndim[0]  = RcppDeepState_int();
  qs::c_qsave(ndim,"/home/akhila/fuzzer_packages/fuzzedpackages/prclust/inst/testfiles/cal_S/inputs/ndim.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ndim values: "<< ndim << std::endl;
  IntegerVector numbers(1);
  numbers[0]  = RcppDeepState_int();
  qs::c_qsave(numbers,"/home/akhila/fuzzer_packages/fuzzedpackages/prclust/inst/testfiles/cal_S/inputs/numbers.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "numbers values: "<< numbers << std::endl;
  IntegerVector methods(1);
  methods[0]  = RcppDeepState_int();
  qs::c_qsave(methods,"/home/akhila/fuzzer_packages/fuzzedpackages/prclust/inst/testfiles/cal_S/inputs/methods.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "methods values: "<< methods << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cal_S(data,mu,theta,lambda1[0],lambda2[0],tau[0],ndim[0],numbers[0],methods[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
