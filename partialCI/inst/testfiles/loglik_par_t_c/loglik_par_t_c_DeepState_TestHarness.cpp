// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// loglik_par_t_c_DeepState_TestHarness_generation.cpp and loglik_par_t_c_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double loglik_par_t_c(NumericVector Y, double rho, double sigma_M, double sigma_R, double M0, double R0, double nu);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector Y  = RcppDeepState_NumericVector();
  qs::c_qsave(Y,"/home/akhila/fuzzer_packages/fuzzedpackages/partialCI/inst/testfiles/loglik_par_t_c/inputs/Y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Y values: "<< Y << std::endl;
  NumericVector rho(1);
  rho[0]  = RcppDeepState_double();
  qs::c_qsave(rho,"/home/akhila/fuzzer_packages/fuzzedpackages/partialCI/inst/testfiles/loglik_par_t_c/inputs/rho.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rho values: "<< rho << std::endl;
  NumericVector sigma_M(1);
  sigma_M[0]  = RcppDeepState_double();
  qs::c_qsave(sigma_M,"/home/akhila/fuzzer_packages/fuzzedpackages/partialCI/inst/testfiles/loglik_par_t_c/inputs/sigma_M.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sigma_M values: "<< sigma_M << std::endl;
  NumericVector sigma_R(1);
  sigma_R[0]  = RcppDeepState_double();
  qs::c_qsave(sigma_R,"/home/akhila/fuzzer_packages/fuzzedpackages/partialCI/inst/testfiles/loglik_par_t_c/inputs/sigma_R.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sigma_R values: "<< sigma_R << std::endl;
  NumericVector M0(1);
  M0[0]  = RcppDeepState_double();
  qs::c_qsave(M0,"/home/akhila/fuzzer_packages/fuzzedpackages/partialCI/inst/testfiles/loglik_par_t_c/inputs/M0.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "M0 values: "<< M0 << std::endl;
  NumericVector R0(1);
  R0[0]  = RcppDeepState_double();
  qs::c_qsave(R0,"/home/akhila/fuzzer_packages/fuzzedpackages/partialCI/inst/testfiles/loglik_par_t_c/inputs/R0.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "R0 values: "<< R0 << std::endl;
  NumericVector nu(1);
  nu[0]  = RcppDeepState_double();
  qs::c_qsave(nu,"/home/akhila/fuzzer_packages/fuzzedpackages/partialCI/inst/testfiles/loglik_par_t_c/inputs/nu.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nu values: "<< nu << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    loglik_par_t_c(Y,rho[0],sigma_M[0],sigma_R[0],M0[0],R0[0],nu[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
