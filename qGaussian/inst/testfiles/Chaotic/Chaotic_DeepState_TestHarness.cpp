// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// Chaotic_DeepState_TestHarness_generation.cpp and Chaotic_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector Chaotic(int n, double q, double v0, double z0);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector n(1);
  n[0]  = RcppDeepState_int();
  qs::c_qsave(n,"/home/akhila/fuzzer_packages/fuzzedpackages/qGaussian/inst/testfiles/Chaotic/inputs/n.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n values: "<< n << std::endl;
  NumericVector q(1);
  q[0]  = RcppDeepState_double();
  qs::c_qsave(q,"/home/akhila/fuzzer_packages/fuzzedpackages/qGaussian/inst/testfiles/Chaotic/inputs/q.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "q values: "<< q << std::endl;
  NumericVector v0(1);
  v0[0]  = RcppDeepState_double();
  qs::c_qsave(v0,"/home/akhila/fuzzer_packages/fuzzedpackages/qGaussian/inst/testfiles/Chaotic/inputs/v0.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "v0 values: "<< v0 << std::endl;
  NumericVector z0(1);
  z0[0]  = RcppDeepState_double();
  qs::c_qsave(z0,"/home/akhila/fuzzer_packages/fuzzedpackages/qGaussian/inst/testfiles/Chaotic/inputs/z0.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "z0 values: "<< z0 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    Chaotic(n[0],q[0],v0[0],z0[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
