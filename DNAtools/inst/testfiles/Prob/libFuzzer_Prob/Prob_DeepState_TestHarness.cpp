// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// Prob_DeepState_TestHarness_generation.cpp and Prob_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector Prob(CharacterVector vstrCombs, NumericVector q, NumericVector R, double r, double t);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  CharacterVector vstrCombs  = RcppDeepState_CharacterVector();
  std::string vstrCombs_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DNAtools/inst/testfiles/Prob/libFuzzer_Prob/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_vstrCombs.qs";
  qs::c_qsave(vstrCombs,vstrCombs_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "vstrCombs values: "<< vstrCombs << std::endl;
  NumericVector q  = RcppDeepState_NumericVector();
  std::string q_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DNAtools/inst/testfiles/Prob/libFuzzer_Prob/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_q.qs";
  qs::c_qsave(q,q_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "q values: "<< q << std::endl;
  NumericVector R  = RcppDeepState_NumericVector();
  std::string R_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DNAtools/inst/testfiles/Prob/libFuzzer_Prob/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_R.qs";
  qs::c_qsave(R,R_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "R values: "<< R << std::endl;
  NumericVector r(1);
  r[0]  = RcppDeepState_double();
  std::string r_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DNAtools/inst/testfiles/Prob/libFuzzer_Prob/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_r.qs";
  qs::c_qsave(r,r_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "r values: "<< r << std::endl;
  NumericVector t(1);
  t[0]  = RcppDeepState_double();
  std::string t_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DNAtools/inst/testfiles/Prob/libFuzzer_Prob/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_t.qs";
  qs::c_qsave(t,t_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "t values: "<< t << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    Prob(vstrCombs,q,R,r[0],t[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
